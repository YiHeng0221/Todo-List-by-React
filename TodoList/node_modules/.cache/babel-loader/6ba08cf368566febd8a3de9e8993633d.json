{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport default function updateFilter(e) {\n  _s();\n\n  const [filter, setFilter] = useState(\"All\");\n  const updateFilter = useCallback(newFilter => {\n    setFilter(newFilter);\n  }, []);\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      if (filter === \"all\") return true;\n      return filter === \"undone\" ? !todo.isDone : todo.isDone;\n    });\n  }, [todos, filter]);\n  return {\n    todos: filteredTodos,\n    value,\n    filter,\n    updateFilter\n  };\n} // switch (buttonPress) {\n//   case 'Done':\n//     setTodos(\n//       todos.map((todo)=> {\n//         if(todo.isDone){\n//           return{\n//             ...todo,\n//             isDone: true,\n//           }\n//         }\n//         return  {\n//           ...todo,\n//             isDone: false,\n//         }\n//       })\n//     )\n//     break;\n//     case 'Undone':\n//       setTodos(\n//         todos.map((todo)=> {\n//           if(!todo.isDone){\n//             return{\n//               ...todo,\n//               isDone: false,\n//             }\n//           }\n//           return  {\n//             ...todo,\n//               isDone: true,\n//           }\n//         })\n//       )\n//       break;\n// }\n\n_s(updateFilter, \"qjwppciVjIn8Epdjpk2fuBLU80Y=\");","map":{"version":3,"sources":["/Users/wuyiheng/Desktop/week21/hw1/my-app/src/useFilterButton.js"],"names":["useState","updateFilter","e","filter","setFilter","useCallback","newFilter","filteredTodos","useMemo","todos","todo","isDone","value"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;AAAA;;AACtC,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAqBJ,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAMC,YAAY,GAAGI,WAAW,CAAEC,SAAD,IAAe;AAC9CF,IAAAA,SAAS,CAACE,SAAD,CAAT;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,QAAMC,aAAa,GAAGC,OAAO,CAAC,MAAM;AAClC,WAAOC,KAAK,CAACN,MAAN,CAAcO,IAAD,IAAU;AAC5B,UAAIP,MAAM,KAAK,KAAf,EAAsB,OAAO,IAAP;AACtB,aAAOA,MAAM,KAAK,QAAX,GAAsB,CAACO,IAAI,CAACC,MAA5B,GAAqCD,IAAI,CAACC,MAAjD;AACD,KAHM,CAAP;AAID,GAL4B,EAK1B,CAACF,KAAD,EAAQN,MAAR,CAL0B,CAA7B;AAOA,SAAO;AACLM,IAAAA,KAAK,EAAEF,aADF;AAELK,IAAAA,KAFK;AAGLT,IAAAA,MAHK;AAILF,IAAAA;AAJK,GAAP;AAMD,C,CACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GApDsBA,Y","sourcesContent":["import { useState } from \"react\";\n\nexport default function updateFilter(e) {\n  const [ filter, setFilter]=useState(\"All\")\n  const updateFilter = useCallback((newFilter) => {\n    setFilter(newFilter);\n  }, []);\n  const filteredTodos = useMemo(() => {\n    return todos.filter((todo) => {\n      if (filter === \"all\") return true;\n      return filter === \"undone\" ? !todo.isDone : todo.isDone;\n    });\n  }, [todos, filter]);\n\n  return {\n    todos: filteredTodos,\n    value,\n    filter,\n    updateFilter,\n  }\n}\n  // switch (buttonPress) {\n  //   case 'Done':\n  //     setTodos(\n  //       todos.map((todo)=> {\n  //         if(todo.isDone){\n  //           return{\n  //             ...todo,\n  //             isDone: true,\n  //           }\n  //         }\n  //         return  {\n  //           ...todo,\n  //             isDone: false,\n  //         }\n  //       })\n  //     )\n  //     break;\n  //     case 'Undone':\n  //       setTodos(\n  //         todos.map((todo)=> {\n  //           if(!todo.isDone){\n  //             return{\n  //               ...todo,\n  //               isDone: false,\n  //             }\n  //           }\n  //           return  {\n  //             ...todo,\n  //               isDone: true,\n  //           }\n  //         })\n  //       )\n  //       break;\n  // }"]},"metadata":{},"sourceType":"module"}