{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useTodo from './useTodo';\nexport default function useInput() {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const {\n    id,\n    todos,\n    setTodos\n  } = useTodo();\n\n  const handleInputChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleEnterKeyPress = e => {\n    if (e.key === 'Enter' && value) {\n      setTodos([{\n        id: id.current,\n        content: value,\n        isDone: !'checked',\n        // fuuu, it took me three days\n        isShown: true\n      }, ...todos]);\n      e.target.value = ''; // setValue does not work , why?\n\n      id.current++;\n    }\n  };\n\n  const handleDeleteButton = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const handleCheckBox = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo;\n      return { ...todo,\n        isDone: !todo.isDone\n      };\n    }));\n  };\n\n  const handleClearTodo = () => {\n    setTodos([]);\n  };\n\n  const filterButton = shown => {\n    switch (shown) {\n      case 'Done':\n        setTodos(todos.map(todo => {\n          if (todo.isDone) {\n            return { ...todo,\n              isShown: true\n            };\n          }\n\n          return { ...todo,\n            isShown: false\n          };\n        }));\n        break;\n\n      case 'Undone':\n        setTodos(todos.map(todo => {\n          if (todo.isDone) {\n            return { ...todo,\n              isShown: false\n            };\n          }\n\n          return { ...todo,\n            isShown: true\n          };\n        }));\n        break;\n\n      default:\n        setTodos(todos.map(todo => {\n          return { ...todo,\n            isShown: true\n          };\n        }));\n        break;\n    }\n  };\n\n  return {\n    value,\n    setValue,\n    id,\n    todos,\n    setTodos,\n    handleInputChange,\n    handleEnterKeyPress,\n    handleDeleteButton,\n    handleCheckBox,\n    handleClearTodo,\n    filterButton\n  };\n}\n\n_s(useInput, \"PKwWTiN8VtIjnf0zd9Jc6iop8Kw=\", false, function () {\n  return [useTodo];\n});","map":{"version":3,"sources":["/Users/wuyiheng/Desktop/week21/hw1/my-app/src/useInput.js"],"names":["useState","useTodo","useInput","value","setValue","id","todos","setTodos","handleInputChange","e","target","handleEnterKeyPress","key","current","content","isDone","isShown","handleDeleteButton","filter","todo","handleCheckBox","map","handleClearTodo","filterButton","shown"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport useTodo from './useTodo';\n\nexport default function useInput() {\n  const [ value, setValue ] = useState(\"\")\n  const { id, todos, setTodos } = useTodo()\n  \n  \n  const handleInputChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const handleEnterKeyPress = (e) => {\n    if(e.key ==='Enter' && value){\n      setTodos([\n        {\n          id: id.current,\n          content: value,\n          isDone: !'checked',\n          // fuuu, it took me three days\n          isShown: true,\n        },\n        ...todos,\n      ]);\n      e.target.value = ''\n      // setValue does not work , why?\n      id.current++\n    }\n  }\n\n  const handleDeleteButton = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id ))\n  }\n\n  const handleCheckBox = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if(todo.id  !== id) return todo\n        return {\n          ...todo,\n          isDone: !todo.isDone\n        }\n      })\n    )\n  }\n\n  const handleClearTodo = () => {\n    setTodos([]);\n  }\n\n  const filterButton = (shown) => {\n    switch (shown) {\n      case 'Done':\n        setTodos(\n          todos.map((todo) => {\n            if(todo.isDone){\n              return {\n                ...todo,\n                isShown: true\n              }\n            } \n            return {\n              ...todo,\n              isShown: false\n            }\n          })\n        )\n      break;\n      case 'Undone':\n        setTodos(\n          todos.map((todo) => {\n            if(todo.isDone) {\n              return {\n                ...todo,\n                isShown: false\n              }\n            }\n            return {\n              ...todo,\n              isShown: true\n            }\n          })\n        )\n      break;\n      default:\n        setTodos(\n          todos.map((todo) => {\n            return {\n              ...todo,\n              isShown: true\n            }\n          })\n        )\n      break;\n    }\n  }\n  return ({\n      value, \n      setValue,\n      id, \n      todos,\n      setTodos,\n      handleInputChange,\n      handleEnterKeyPress,\n      handleDeleteButton,\n      handleCheckBox,\n      handleClearTodo,\n      filterButton,\n    }\n  )\n}"]},"metadata":{},"sourceType":"module"}