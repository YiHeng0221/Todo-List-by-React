{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wuyiheng/Desktop/week21/hw1/my-app/src/useInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useTodo from './useTodo';\nimport TodoItem from './TodoItem';\nexport default function useInput() {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const {\n    id,\n    todos,\n    setTodos\n  } = useTodo();\n\n  const handleInputChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleEnterKeyPress = e => {\n    if (e.key === 'Enter' && value) {\n      setTodos([{\n        id: id.current,\n        content: value,\n        isDone: !'checked',\n        // fuuu, it took me three days\n        isShown: true\n      }, ...todos]);\n      e.target.value = ''; // setValue does not work , why?\n\n      id.current++;\n    }\n  };\n\n  const handleDeleteButton = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const handleCheckBox = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo;\n      return { ...todo,\n        isDone: !todo.isDone\n      };\n    }));\n  };\n\n  const handleClearTodo = () => {\n    setTodos([]);\n  };\n\n  const [filter, setFilter] = useState(\"All\");\n\n  const handleFilterMapping = e => {\n    setFilter(e);\n\n    if (filter === 'All') {\n      todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo,\n        handleDeleteButton: handleDeleteButton,\n        handleCheckBox: handleCheckBox\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this));\n    } else if (filter === 'Done') {\n      todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo,\n        isDone: 'checked',\n        handleDeleteButton: handleDeleteButton,\n        handleCheckBox: handleCheckBox\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this));\n    } else {\n      todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo,\n        isDone: !'checked',\n        handleDeleteButton: handleDeleteButton,\n        handleCheckBox: handleCheckBox\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  return {\n    value,\n    setValue,\n    id,\n    handleFilterMapping,\n    filter,\n    setFilter,\n    setTodos,\n    handleInputChange,\n    handleEnterKeyPress,\n    handleDeleteButton,\n    handleCheckBox,\n    handleClearTodo\n  };\n}\n\n_s(useInput, \"/yNEvIeujyAEcI/47tEkQXj+KfE=\", false, function () {\n  return [useTodo];\n});","map":{"version":3,"sources":["/Users/wuyiheng/Desktop/week21/hw1/my-app/src/useInput.js"],"names":["useState","useTodo","TodoItem","useInput","value","setValue","id","todos","setTodos","handleInputChange","e","target","handleEnterKeyPress","key","current","content","isDone","isShown","handleDeleteButton","filter","todo","handleCheckBox","map","handleClearTodo","setFilter","handleFilterMapping"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport useTodo from './useTodo';\nimport TodoItem from './TodoItem';\n\nexport default function useInput() {\n  const [ value, setValue ] = useState(\"\")\n  const { id, todos, setTodos } = useTodo()\n  \n  \n  const handleInputChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const handleEnterKeyPress = (e) => {\n    if(e.key ==='Enter' && value){\n      setTodos([\n        {\n          id: id.current,\n          content: value,\n          isDone: !'checked',\n          // fuuu, it took me three days\n          isShown: true,\n        },\n        ...todos,\n      ]);\n      e.target.value = ''\n      // setValue does not work , why?\n      id.current++\n    }\n  }\n\n  const handleDeleteButton = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id ))\n  }\n\n  const handleCheckBox = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if(todo.id  !== id) return todo\n        return {\n          ...todo,\n          isDone: !todo.isDone\n        }\n      })\n    )\n  }\n\n  const handleClearTodo = () => {\n    setTodos([]);\n  }\n  const [ filter, setFilter]=useState(\"All\")\n  const handleFilterMapping = (e) => {\n    setFilter(e)\n    if(filter === 'All') {\n      todos.map((todo)=>(\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleDeleteButton={handleDeleteButton}\n          handleCheckBox={handleCheckBox}\n        />          \n      ))\n    } else if(filter === 'Done') {\n      todos.map((todo)=>(\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          isDone={'checked'}\n          handleDeleteButton={handleDeleteButton}\n          handleCheckBox={handleCheckBox}\n        />          \n      ))\n    } else {\n      todos.map((todo)=>(\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          isDone={!'checked'}\n          handleDeleteButton={handleDeleteButton}\n          handleCheckBox={handleCheckBox}\n        />          \n      ))\n    }\n  }\n \n  \n  return ({\n      value, \n      setValue,\n      id, \n      handleFilterMapping,\n      filter, \n      setFilter,\n      setTodos,\n      handleInputChange,\n      handleEnterKeyPress,\n      handleDeleteButton,\n      handleCheckBox,\n      handleClearTodo,\n    }\n  )\n}"]},"metadata":{},"sourceType":"module"}