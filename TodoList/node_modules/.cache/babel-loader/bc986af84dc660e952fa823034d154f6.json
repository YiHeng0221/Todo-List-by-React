{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useTodo from './useTodo';\nexport default function useInput() {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const {\n    id,\n    todos,\n    setTodos\n  } = useTodo();\n\n  const handleInputChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleEnterKeyPress = e => {\n    if (e.key === 'Enter' && value) {\n      setTodos([{\n        id: id.current,\n        content: value,\n        isDone: !'checked' // fuuu, it took me three days\n\n      }, ...todos]);\n      e.target.value = ''; // setValue does not work , why?\n\n      id.current++;\n    }\n  };\n\n  const handleDeleteButton = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const handleCheckBox = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo;\n      return { ...todo,\n        isDone: !todo.isDone\n      };\n    }));\n  };\n\n  const handleClearTodo = () => {\n    setTodos([]);\n  };\n\n  const [filter, setFilter] = useState(\"All\");\n  const updateFilter = useCallback(newFilter => {\n    setFilter(newFilter);\n  }, []);\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      if (filter === \"all\") return true;\n      return filter === \"undone\" ? !todo.isDone : todo.isDone;\n    });\n  }, [todos, filter]);\n  return {\n    value,\n    setValue,\n    id,\n    todos,\n    setTodos,\n    handleInputChange,\n    handleEnterKeyPress,\n    handleDeleteButton,\n    handleCheckBox,\n    handleClearTodo,\n    todos: filteredTodos,\n    value,\n    filter,\n    updateFilter\n  };\n}\n\n_s(useInput, \"zNIQWUAWU1lkmFu8PnFtImH9XOU=\", false, function () {\n  return [useTodo];\n});","map":{"version":3,"sources":["/Users/wuyiheng/Desktop/week21/hw1/my-app/src/useInput.js"],"names":["useState","useTodo","useInput","value","setValue","id","todos","setTodos","handleInputChange","e","target","handleEnterKeyPress","key","current","content","isDone","handleDeleteButton","filter","todo","handleCheckBox","map","handleClearTodo","setFilter","updateFilter","useCallback","newFilter","filteredTodos","useMemo"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAEK,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,MAA0BN,OAAO,EAAvC;;AAGA,QAAMO,iBAAiB,GAAIC,CAAD,IAAO;AAC/BL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASP,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMQ,mBAAmB,GAAIF,CAAD,IAAO;AACjC,QAAGA,CAAC,CAACG,GAAF,KAAS,OAAT,IAAoBT,KAAvB,EAA6B;AAC3BI,MAAAA,QAAQ,CAAC,CACP;AACEF,QAAAA,EAAE,EAAEA,EAAE,CAACQ,OADT;AAEEC,QAAAA,OAAO,EAAEX,KAFX;AAGEY,QAAAA,MAAM,EAAE,CAAC,SAHX,CAIE;;AAJF,OADO,EAOP,GAAGT,KAPI,CAAD,CAAR;AASAG,MAAAA,CAAC,CAACC,MAAF,CAASP,KAAT,GAAiB,EAAjB,CAV2B,CAW3B;;AACAE,MAAAA,EAAE,CAACQ,OAAH;AACD;AACF,GAfD;;AAiBA,QAAMG,kBAAkB,GAAIX,EAAD,IAAQ;AACjCE,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACb,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMc,cAAc,GAAId,EAAD,IAAQ;AAC7BE,IAAAA,QAAQ,CACND,KAAK,CAACc,GAAN,CAAWF,IAAD,IAAU;AAClB,UAAGA,IAAI,CAACb,EAAL,KAAaA,EAAhB,EAAoB,OAAOa,IAAP;AACpB,aAAO,EACL,GAAGA,IADE;AAELH,QAAAA,MAAM,EAAE,CAACG,IAAI,CAACH;AAFT,OAAP;AAID,KAND,CADM,CAAR;AASD,GAVD;;AAYA,QAAMM,eAAe,GAAG,MAAM;AAC5Bd,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFD;;AAKA,QAAM,CAAEU,MAAF,EAAUK,SAAV,IAAqBtB,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAMuB,YAAY,GAAGC,WAAW,CAAEC,SAAD,IAAe;AAC9CH,IAAAA,SAAS,CAACG,SAAD,CAAT;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,QAAMC,aAAa,GAAGC,OAAO,CAAC,MAAM;AAClC,WAAOrB,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAU;AAC5B,UAAID,MAAM,KAAK,KAAf,EAAsB,OAAO,IAAP;AACtB,aAAOA,MAAM,KAAK,QAAX,GAAsB,CAACC,IAAI,CAACH,MAA5B,GAAqCG,IAAI,CAACH,MAAjD;AACD,KAHM,CAAP;AAID,GAL4B,EAK1B,CAACT,KAAD,EAAQW,MAAR,CAL0B,CAA7B;AAaA,SAAQ;AACJd,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,EAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,iBANI;AAOJG,IAAAA,mBAPI;AAQJK,IAAAA,kBARI;AASJG,IAAAA,cATI;AAUJE,IAAAA,eAVI;AAWJf,IAAAA,KAAK,EAAEoB,aAXH;AAYJvB,IAAAA,KAZI;AAaJc,IAAAA,MAbI;AAcJM,IAAAA;AAdI,GAAR;AAiBD;;GAjFuBrB,Q;UAEUD,O","sourcesContent":["import { useState } from \"react\";\nimport useTodo from './useTodo';\n\nexport default function useInput() {\n  const [ value, setValue ] = useState(\"\")\n  const { id, todos, setTodos } = useTodo()\n  \n  \n  const handleInputChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const handleEnterKeyPress = (e) => {\n    if(e.key ==='Enter' && value){\n      setTodos([\n        {\n          id: id.current,\n          content: value,\n          isDone: !'checked',\n          // fuuu, it took me three days\n        },\n        ...todos,\n      ]);\n      e.target.value = ''\n      // setValue does not work , why?\n      id.current++\n    }\n  }\n\n  const handleDeleteButton = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id ))\n  }\n\n  const handleCheckBox = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if(todo.id  !== id) return todo\n        return {\n          ...todo,\n          isDone: !todo.isDone\n        }\n      })\n    )\n  }\n\n  const handleClearTodo = () => {\n    setTodos([]);\n  }\n\n  \n  const [ filter, setFilter]=useState(\"All\")\n  const updateFilter = useCallback((newFilter) => {\n    setFilter(newFilter);\n  }, []);\n  const filteredTodos = useMemo(() => {\n    return todos.filter((todo) => {\n      if (filter === \"all\") return true;\n      return filter === \"undone\" ? !todo.isDone : todo.isDone;\n    });\n  }, [todos, filter]);\n\n\n  \n\n  \n\n\n  return ({\n      value, \n      setValue,\n      id, \n      todos,\n      setTodos,\n      handleInputChange,\n      handleEnterKeyPress,\n      handleDeleteButton,\n      handleCheckBox,\n      handleClearTodo,\n      todos: filteredTodos,\n      value,\n      filter,\n      updateFilter,\n    }\n  )\n}"]},"metadata":{},"sourceType":"module"}