{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useMemo } from \"react\";\nimport useTodo from './useTodo';\nexport default function useInput() {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const {\n    id,\n    todos,\n    setTodos\n  } = useTodo();\n  const [filter, setFilter] = useState(\"All\");\n\n  const handleInputChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleEnterKeyPress = e => {\n    if (e.key === 'Enter' && value) {\n      setTodos([{\n        id: id.current,\n        content: value,\n        isDone: !'checked',\n        // fuuu, it took me three days\n        isShown: true\n      }, ...todos]);\n      e.target.value = ''; // setValue does not work , why?\n\n      id.current++;\n    }\n  };\n\n  const handleDeleteButton = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const handleCheckBox = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo;\n      return { ...todo,\n        isDone: !todo.isDone\n      };\n    }));\n  };\n\n  const handleClearTodo = () => {\n    setTodos([]);\n  };\n\n  const updateFilter = useCallback(newFilter => {\n    setFilter(newFilter);\n  }, []);\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      if (filter === \"All\") return true;\n      return filter === \"Undone\" ? !todo.isDone : todo.isDone;\n    });\n  }, [todos, filter]);\n  return {\n    value,\n    setValue,\n    id,\n    updateFilter,\n    todos: filteredTodos,\n    setTodos,\n    handleInputChange,\n    handleEnterKeyPress,\n    handleDeleteButton,\n    handleCheckBox,\n    handleClearTodo\n  };\n}\n\n_s(useInput, \"GD7weIzE4LXk5uoLEWHOuIP206k=\", false, function () {\n  return [useTodo];\n});","map":{"version":3,"sources":["/Users/wuyiheng/Desktop/week21/hw1/my-app/src/useInput.js"],"names":["useState","useCallback","useMemo","useTodo","useInput","value","setValue","id","todos","setTodos","filter","setFilter","handleInputChange","e","target","handleEnterKeyPress","key","current","content","isDone","isShown","handleDeleteButton","todo","handleCheckBox","map","handleClearTodo","updateFilter","newFilter","filteredTodos"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,OAAhC,QAA+C,OAA/C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAEO,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,MAA0BN,OAAO,EAAvC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;;AAIA,QAAMY,iBAAiB,GAAIC,CAAD,IAAO;AAC/BP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAAST,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMU,mBAAmB,GAAIF,CAAD,IAAO;AACjC,QAAGA,CAAC,CAACG,GAAF,KAAS,OAAT,IAAoBX,KAAvB,EAA6B;AAC3BI,MAAAA,QAAQ,CAAC,CACP;AACEF,QAAAA,EAAE,EAAEA,EAAE,CAACU,OADT;AAEEC,QAAAA,OAAO,EAAEb,KAFX;AAGEc,QAAAA,MAAM,EAAE,CAAC,SAHX;AAIE;AACAC,QAAAA,OAAO,EAAE;AALX,OADO,EAQP,GAAGZ,KARI,CAAD,CAAR;AAUAK,MAAAA,CAAC,CAACC,MAAF,CAAST,KAAT,GAAiB,EAAjB,CAX2B,CAY3B;;AACAE,MAAAA,EAAE,CAACU,OAAH;AACD;AACF,GAhBD;;AAkBA,QAAMI,kBAAkB,GAAId,EAAD,IAAQ;AACjCE,IAAAA,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAcY,IAAD,IAAUA,IAAI,CAACf,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMgB,cAAc,GAAIhB,EAAD,IAAQ;AAC7BE,IAAAA,QAAQ,CACND,KAAK,CAACgB,GAAN,CAAWF,IAAD,IAAU;AAClB,UAAGA,IAAI,CAACf,EAAL,KAAaA,EAAhB,EAAoB,OAAOe,IAAP;AACpB,aAAO,EACL,GAAGA,IADE;AAELH,QAAAA,MAAM,EAAE,CAACG,IAAI,CAACH;AAFT,OAAP;AAID,KAND,CADM,CAAR;AASD,GAVD;;AAYA,QAAMM,eAAe,GAAG,MAAM;AAC5BhB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFD;;AAGA,QAAMiB,YAAY,GAAGzB,WAAW,CAAE0B,SAAD,IAAe;AAC9ChB,IAAAA,SAAS,CAACgB,SAAD,CAAT;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAKA,QAAMC,aAAa,GAAG1B,OAAO,CAAC,MAAM;AAClC,WAAOM,KAAK,CAACE,MAAN,CAAcY,IAAD,IAAU;AAC5B,UAAIZ,MAAM,KAAK,KAAf,EAAsB,OAAO,IAAP;AACtB,aAAOA,MAAM,KAAK,QAAX,GAAsB,CAACY,IAAI,CAACH,MAA5B,GAAqCG,IAAI,CAACH,MAAjD;AACD,KAHM,CAAP;AAID,GAL4B,EAK1B,CAACX,KAAD,EAAQE,MAAR,CAL0B,CAA7B;AAQA,SAAQ;AACJL,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,EAHI;AAIJmB,IAAAA,YAJI;AAKJlB,IAAAA,KAAK,EAAEoB,aALH;AAMJnB,IAAAA,QANI;AAOJG,IAAAA,iBAPI;AAQJG,IAAAA,mBARI;AASJM,IAAAA,kBATI;AAUJE,IAAAA,cAVI;AAWJE,IAAAA;AAXI,GAAR;AAcD;;GA3EuBrB,Q;UAEUD,O","sourcesContent":["import { useState, useCallback, useMemo } from \"react\";\nimport useTodo from './useTodo';\n\nexport default function useInput() {\n  const [ value, setValue ] = useState(\"\")\n  const { id, todos, setTodos } = useTodo()\n  const [filter, setFilter] = useState(\"All\");\n\n  \n  \n  const handleInputChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const handleEnterKeyPress = (e) => {\n    if(e.key ==='Enter' && value){\n      setTodos([\n        {\n          id: id.current,\n          content: value,\n          isDone: !'checked',\n          // fuuu, it took me three days\n          isShown: true,\n        },\n        ...todos,\n      ]);\n      e.target.value = ''\n      // setValue does not work , why?\n      id.current++\n    }\n  }\n\n  const handleDeleteButton = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id ))\n  }\n\n  const handleCheckBox = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if(todo.id  !== id) return todo\n        return {\n          ...todo,\n          isDone: !todo.isDone\n        }\n      })\n    )\n  }\n\n  const handleClearTodo = () => {\n    setTodos([]);\n  }\n  const updateFilter = useCallback((newFilter) => {\n    setFilter(newFilter);\n  }, []);\n\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter((todo) => {\n      if (filter === \"All\") return true;\n      return filter === \"Undone\" ? !todo.isDone : todo.isDone;\n    });\n  }, [todos, filter]);\n \n  \n  return ({\n      value, \n      setValue,\n      id, \n      updateFilter,\n      todos: filteredTodos,\n      setTodos,\n      handleInputChange,\n      handleEnterKeyPress,\n      handleDeleteButton,\n      handleCheckBox,\n      handleClearTodo,\n    }\n  )\n}"]},"metadata":{},"sourceType":"module"}